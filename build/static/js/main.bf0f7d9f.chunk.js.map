{"version":3,"sources":["Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["Todoinput","id","onKeyDown","e","target","value","keyCode","props","add","type","placeholder","Component","Todoing","todo","this","doingnum","map","item","idx","done","key","onClick","modify","name","del","finishnum","checked","Todolist","addItem","data","setState","todoList","state","localStorage","setItem","JSON","stringify","modifyItem","delItem","splice","parse","getItem","bind","i","ReactDOM","render","document","getElementById"],"mappings":"4PAEqBA,E,iLACR,IAAD,OACJ,OACI,yBAAKC,GAAG,QACJ,yBAAKA,GAAG,YAAR,8CACA,2BAAOA,GAAG,QAAQC,UAAW,SAACC,GAAQA,EAAEC,OAAOC,OAAuB,KAAdF,EAAEG,UAAgB,EAAKC,MAAMC,IAAIL,EAAEC,OAAOC,OAAOF,EAAEC,OAAOC,MAAQ,KACnHI,KAAK,OAAOC,YAAY,8C,GANRC,aCAlBC,E,iLACP,IAAD,OACAC,EAAQC,KAAKP,MAAbM,KACL,OACI,kBAAC,WAAD,KACI,uDAAQ,8BAAOC,KAAKP,MAAMQ,UAA1B,KACA,4BACIF,EAAKG,KAAI,SAACC,EAAKC,GACX,OAAID,EAAKE,KASG,GAPJ,wBAAIC,IAAKF,GACL,2BAAOT,KAAK,WAAWY,QAAS,kBAAI,EAAKd,MAAMe,OAAOJ,MACtD,2BAAID,EAAKM,MACT,4BAAQF,QAAS,kBAAI,EAAKd,MAAMiB,IAAIN,KAApC,qBAUpB,kDAAQ,8BAAOJ,KAAKP,MAAMkB,WAA1B,KACA,4BACIZ,EAAKG,KAAI,SAACC,EAAKC,GACX,OAAGD,EAAKE,KAEA,wBAAIC,IAAKF,GACL,2BAAOT,KAAK,WAAWY,QAAS,kBAAI,EAAKd,MAAMe,OAAOJ,IAAMQ,QAAQ,YACpE,2BAAIT,EAAKM,MACT,4BAAQF,QAAS,kBAAI,EAAKd,MAAMiB,IAAIN,KAApC,iBAIA,Y,GAnCCP,aCGhBgB,G,kBACjB,WAAYpB,GAAQ,IAAD,uBACf,4CAAMA,KAmBVqB,QAAU,SAACC,GACP,IAAIZ,EAAO,CAAC,KAAQY,EAAM,MAAQ,GAClC,EAAKC,SAAS,CACVC,SAAS,GAAD,mBAAM,EAAKC,MAAMD,UAAjB,CAA2Bd,MACpC,WACCgB,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKJ,MAAMD,eAzB3C,EA6BnBM,WAAa,SAACnB,GACV,IAAID,EAAO,EAAKe,MAAMD,SACtBd,EAAKC,GAAKC,MAASF,EAAKC,GAAKC,KAC7B,EAAKW,SAAS,CACVC,SAAUd,KAjCC,EAqCnBqB,QAAU,SAACpB,GACP,IAAID,EAAO,EAAKe,MAAMD,SACtBd,EAAKsB,OAAOrB,EAAK,GACjB,EAAKY,SAAS,CACVC,SAAUd,KAvCd,IAAIJ,EAAOsB,KAAKK,MAAMP,aAAaQ,QAAQ,SAF5B,OAIX,EAAKT,MADNnB,EACc,CACTkB,SAAUlB,EACVE,SAAS,EACTU,UAAU,GAGD,CACTM,SAAU,GACVhB,SAAS,EACTU,UAAU,GAGlB,EAAKG,QAAQ,EAAKA,QAAQc,KAAb,gBACb,EAAKL,WAAW,EAAKA,WAAWK,KAAhB,gBAChB,EAAKJ,QAAQ,EAAKA,QAAQI,KAAb,gBAlBE,E,sEA8CfT,aAAaC,QAAQ,OAAOC,KAAKC,UAAUtB,KAAKkB,MAAMD,WACtDjB,KAAKkB,MAAMjB,SAAWD,KAAKkB,MAAMP,UAAY,EAC7C,IAAIR,EAAOH,KAAKkB,MAAMD,SACtB,IAAI,IAAIY,KAAK1B,EACNA,EAAK0B,GAAGxB,KACPL,KAAKkB,MAAMP,YAEXX,KAAKkB,MAAMjB,WAInB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAWP,IAAKM,KAAKc,UACrB,kBAAC,EAAD,CAASJ,IAAKV,KAAKwB,QAASzB,KAAMC,KAAKkB,MAAMD,SAAUT,OAAQR,KAAKuB,WAAYtB,SAAUD,KAAKkB,MAAMjB,SAAUU,UAAWX,KAAKkB,MAAMP,iB,GA7D/Gd,cCAtCiC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.bf0f7d9f.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nexport default class Todoinput extends Component{\r\n    render(){\r\n        return(\r\n            <div id='ToDo'>\r\n                <div id='ToDoList'>输入添加事项：</div>\r\n                <input id='Input' onKeyDown={(e)=>{if(e.target.value && e.keyCode === 13){this.props.add(e.target.value);e.target.value = '';}}} \r\n                       type=\"text\" placeholder=\"添加待办事项\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Fragment, Component } from 'react';\r\n\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        var {todo} = this.props;\r\n        return (\r\n            <Fragment>\r\n                <h1>正在进行<span>{this.props.doingnum}</span> </h1>\r\n                <ol>{\r\n                    todo.map((item,idx) => {\r\n                        if(!item.done){\r\n                            return(\r\n                                <li key={idx}>\r\n                                    <input type='checkbox' onClick={()=>this.props.modify(idx)}/>\r\n                                    <p>{item.name}</p>\r\n                                    <button onClick={()=>this.props.del(idx)}>删除</button>\r\n                                </li>\r\n                            )\r\n                        }else{\r\n                            return ('')\r\n                        }\r\n                    })     \r\n                }\r\n                </ol>\r\n                \r\n                <h1>已完成 <span>{this.props.finishnum}</span> </h1>\r\n                <ol>{\r\n                    todo.map((item,idx) => {\r\n                        if(item.done){\r\n                            return(\r\n                                <li key={idx}>\r\n                                    <input type='checkbox' onClick={()=>this.props.modify(idx)} checked=\"checked\"/>\r\n                                    <p>{item.name}</p>\r\n                                    <button onClick={()=>this.props.del(idx)}>删除</button>\r\n                                </li>\r\n                            )\r\n                        }else{\r\n                            return ('')\r\n                        }\r\n                    })     \r\n                }\r\n                </ol>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, {Fragment, Component} from 'react';\r\nimport Todoinput from './Todoinput';\r\nimport Todoing from './Todoing';\r\nimport './Todo.css';\r\n \r\nexport default class Todolist extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        let todo = JSON.parse(localStorage.getItem('todo'));\r\n        if(todo){\r\n            this.state = {\r\n                todoList: todo,\r\n                doingnum:0,\r\n                finishnum:0\r\n            }\r\n        }else{\r\n            this.state = {\r\n                todoList: [],\r\n                doingnum:0,\r\n                finishnum:0\r\n            }\r\n        }\r\n        this.addItem=this.addItem.bind(this);\r\n        this.modifyItem=this.modifyItem.bind(this);\r\n        this.delItem=this.delItem.bind(this);\r\n    }\r\n    addItem = (data) => {\r\n        let item = {\"name\": data, \"done\": false};\r\n        this.setState({\r\n            todoList: [...this.state.todoList, item]\r\n        }, ()=>{\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todoList));\r\n        })\r\n    }\r\n    \r\n    modifyItem = (idx) => {\r\n        let item = this.state.todoList;\r\n        item[idx].done = !(item[idx].done);\r\n        this.setState({\r\n            todoList: item\r\n        })\r\n    }\r\n\r\n    delItem = (idx) => {\r\n        let item = this.state.todoList;\r\n        item.splice(idx, 1);\r\n        this.setState({\r\n            todoList: item\r\n        });\r\n    }\r\n\r\n    render() {\r\n        localStorage.setItem('todo',JSON.stringify(this.state.todoList));\r\n        this.state.doingnum = this.state.finishnum = 0;\r\n        let item = this.state.todoList;      \r\n        for(var i in item){\r\n            if(item[i].done){\r\n                this.state.finishnum++;\r\n            }else{\r\n                this.state.doingnum++;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Todoinput add={this.addItem}/>\r\n                <Todoing del={this.delItem} todo={this.state.todoList} modify={this.modifyItem} doingnum={this.state.doingnum} finishnum={this.state.finishnum}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport Todolist from './Todolist/Todolist';\n\nReactDOM.render( \n    <Todolist/>,\n    document.getElementById('root')\n)  "],"sourceRoot":""}